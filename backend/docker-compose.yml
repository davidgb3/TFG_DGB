services:
  # Servicio para MongoDB
  mongo:
    image: mongo:8.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db # Montar un volumen en /data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  # Servicio para Mongo Express
  mongo-express:
    image: mongo-express:1.0
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: admin # Cambia esto por tu nombre de usuario
      ME_CONFIG_BASICAUTH_PASSWORD: hlanz # Cambia esto por tu contrase√±a
    depends_on:
      - mongo
  # Servicio para el backend en Node.js
  backend:
    build: . # Construir la imagen usando el Dockerfil
    container_name: backend
    ports:
      - "3000:3000"
    environment:
      - MONGODB_URI=mongodb://root:example@mongo:27017/auth_db?authSource=admin
      - JWT_SECRET=tu_clave_secreta
    depends_on:
      - mongo

  # Servicio para Nginx
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend

# Volumen para persistir los datos de MongoDB
volumes:
  mongo_data: # Volumen con nombre
